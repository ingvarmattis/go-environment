services:
  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /dev:/host/dev:ro
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/
    deploy:
      mode: "global"
      resources:
        reservations:
          cpus: '0.1'
          memory: 128M
        limits:
          cpus: '0.2'
          memory: 256M

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - /data/fast/prometheus_data:/prometheus
      - /home/go-environment/configs/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    deploy:
      replicas: 1
      resources:
        reservations:
          cpus: '0.1'
          memory: 512M
        limits:
          cpus: '0.2'
          memory: 1G

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=postgres:5432
      - GF_DATABASE_NAME=${POSTGRES_DB:-grafana}
      - GF_DATABASE_USER=${POSTGRES_USER:-postgres}
      - GF_DATABASE_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - GF_DATABASE_SSL_MODE=disable
    volumes:
      - /data/fast/grafana_data:/var/lib/grafana
      - /home/go-environment/configs/prometheus/prometheus-datasource.yaml:/etc/grafana/provisioning/datasources/prometheus-datasource.yml
    deploy:
      replicas: 1
      resources:
        reservations:
          cpus: '0.1'
          memory: 256M
        limits:
          cpus: '0.2'
          memory: 512M
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 5s
        order: stop-first

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - /data/fast/postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    deploy:
      replicas: 1
      resources:
        reservations:
          cpus: '0.1'
          memory: 2G
        limits:
          cpus: '0.2'
          memory: 8G
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 5s
        order: stop-first

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    environment:
      DATA_SOURCE_NAME: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-postgres}?sslmode=disable
    deploy:
      replicas: 1
      resources:
        reservations:
          cpus: '0.5'
          memory: 128M
        limits:
          cpus: '1'
          memory: 256M

  tempo:
    image: grafana/tempo:latest
    ports:
      - "5778:5778"
      - "3200:3200"
    environment:
      - TEMPO_HTTP_PORT=5778
      - TEMPO_GRPC_PORT=3200
    volumes:
      - /data/fast/tempo_data:/var/lib/tempo
      - /home/go-environment/configs/tempo/tempo.yaml:/etc/tempo.yaml
    command: [ "-config.file=/etc/tempo.yaml" ]
    deploy:
      replicas: 1
      resources:
        reservations:
          cpus: '0.1'
          memory: 512M
        limits:
          cpus: '0.2'
          memory: 1G

  technitium-dns:
    image: technitium/dns-server:latest
    ports:
      - "5380:5380"
      - "53:53/tcp"
      - "53:53/udp"
    environment:
      - TZ=Europe/Madrid
    volumes:
      - /data/fast/technitium-dns-data/zones:/etc/dns/zones
    deploy:
      replicas: 1
      resources:
        reservations:
          cpus: '0.1'
          memory: 512M
        limits:
          cpus: '0.2'
          memory: 1G

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/go-environment/configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    deploy:
      replicas: 1
      resources:
        reservations:
          cpus: '0.1'
          memory: 128M
        limits:
          cpus: '0.2'
          memory: 256M

# Global configuration for automatic image pulling
x-common-deploy: &common-deploy
  update_config:
    parallelism: 1
    delay: 10s
    order: start-first
  rollback_config:
    parallelism: 1
    delay: 5s
    order: stop-first

networks:
  default:
    external: true
    name: shared-network
